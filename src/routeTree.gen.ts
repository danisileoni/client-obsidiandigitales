/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShoppingCartIndexImport } from './routes/shopping-cart/index'
import { Route as ProductIndexImport } from './routes/product/index'
import { Route as ProductProductSlugImport } from './routes/product/$productSlug'
import { Route as ShoppingCartPaymentIdOrderImport } from './routes/shopping-cart/payment/$idOrder'
import { Route as AuthUserConfigUseridImport } from './routes/auth/user/config/$userid'
import { Route as AuthUserBuysUseridImport } from './routes/auth/user/buys/$userid'

// Create Virtual Routes

const FaqLazyImport = createFileRoute('/faq')()
const IndexLazyImport = createFileRoute('/')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()

// Create/Update Routes

const FaqLazyRoute = FaqLazyImport.update({
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/faq.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ShoppingCartIndexRoute = ShoppingCartIndexImport.update({
  path: '/shopping-cart/',
  getParentRoute: () => rootRoute,
} as any)

const ProductIndexRoute = ProductIndexImport.update({
  path: '/product/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const ProductProductSlugRoute = ProductProductSlugImport.update({
  path: '/product/$productSlug',
  getParentRoute: () => rootRoute,
} as any)

const ShoppingCartPaymentIdOrderRoute = ShoppingCartPaymentIdOrderImport.update(
  {
    path: '/shopping-cart/payment/$idOrder',
    getParentRoute: () => rootRoute,
  } as any,
)

const AuthUserConfigUseridRoute = AuthUserConfigUseridImport.update({
  path: '/auth/user/config/$userid',
  getParentRoute: () => rootRoute,
} as any)

const AuthUserBuysUseridRoute = AuthUserBuysUseridImport.update({
  path: '/auth/user/buys/$userid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqLazyImport
      parentRoute: typeof rootRoute
    }
    '/product/$productSlug': {
      id: '/product/$productSlug'
      path: '/product/$productSlug'
      fullPath: '/product/$productSlug'
      preLoaderRoute: typeof ProductProductSlugImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/product/': {
      id: '/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductIndexImport
      parentRoute: typeof rootRoute
    }
    '/shopping-cart/': {
      id: '/shopping-cart/'
      path: '/shopping-cart'
      fullPath: '/shopping-cart'
      preLoaderRoute: typeof ShoppingCartIndexImport
      parentRoute: typeof rootRoute
    }
    '/shopping-cart/payment/$idOrder': {
      id: '/shopping-cart/payment/$idOrder'
      path: '/shopping-cart/payment/$idOrder'
      fullPath: '/shopping-cart/payment/$idOrder'
      preLoaderRoute: typeof ShoppingCartPaymentIdOrderImport
      parentRoute: typeof rootRoute
    }
    '/auth/user/buys/$userid': {
      id: '/auth/user/buys/$userid'
      path: '/auth/user/buys/$userid'
      fullPath: '/auth/user/buys/$userid'
      preLoaderRoute: typeof AuthUserBuysUseridImport
      parentRoute: typeof rootRoute
    }
    '/auth/user/config/$userid': {
      id: '/auth/user/config/$userid'
      path: '/auth/user/config/$userid'
      fullPath: '/auth/user/config/$userid'
      preLoaderRoute: typeof AuthUserConfigUseridImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  FaqLazyRoute,
  ProductProductSlugRoute,
  AuthLoginLazyRoute,
  AuthRegisterLazyRoute,
  ProductIndexRoute,
  ShoppingCartIndexRoute,
  ShoppingCartPaymentIdOrderRoute,
  AuthUserBuysUseridRoute,
  AuthUserConfigUseridRoute,
})

/* prettier-ignore-end */
